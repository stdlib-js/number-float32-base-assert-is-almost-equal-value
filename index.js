// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var t,n;t=this,n=function(){"use strict";var t="function"==typeof Math.fround?Math.fround:null,n="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,r=Object.prototype.hasOwnProperty,e="function"==typeof Symbol?Symbol:void 0,f="function"==typeof e?e.toStringTag:"",u=n&&"symbol"==typeof Symbol.toStringTag?function(t){var n,e,u,i,a;if(null==t)return o.call(t);e=t[f],a=f,n=null!=(i=t)&&r.call(i,a);try{t[f]=void 0}catch(n){return o.call(t)}return u=o.call(t),n?t[f]=e:delete t[f],u}:function(t){return o.call(t)},i="function"==typeof Float32Array,a=Number.POSITIVE_INFINITY,c="function"==typeof Float32Array?Float32Array:null,l="function"==typeof Float32Array?Float32Array:void 0,y=function(){var t,n,o;if("function"!=typeof c)return!1;try{n=new c([1,3.14,-3.14,5e40]),o=n,t=(i&&o instanceof Float32Array||"[object Float32Array]"===u(o))&&1===n[0]&&3.140000104904175===n[1]&&-3.140000104904175===n[2]&&n[3]===a}catch(n){t=!1}return t}()?l:function(){throw new Error("not implemented")},p=new y(1),d="function"==typeof t?t:function(t){return p[0]=t,p[0]};function b(t){return t!=t}var m=2147483648,s="function"==typeof Uint32Array,A="function"==typeof Uint32Array?Uint32Array:null,h="function"==typeof Uint32Array?Uint32Array:void 0,v=function(){var t,n,o;if("function"!=typeof A)return!1;try{n=new A(n=[1,3.14,-3.14,4294967296,4294967297]),o=n,t=(s&&o instanceof Uint32Array||"[object Uint32Array]"===u(o))&&1===n[0]&&3===n[1]&&4294967293===n[2]&&0===n[3]&&1===n[4]}catch(n){t=!1}return t}()?h:function(){throw new Error("not implemented")},w=new y(1),S=new v(w.buffer);function F(t){return w[0]=t,S[0]}function g(t){return t&m?1+~t:(t|m)>>>0}function U(t,n){var o,r;return b(t)||b(n)?NaN:(o=F(t),r=F(n),function(t){return Math.abs(t)}((o=g(o))-(r=g(r))))}return function(t,n,o){return U(d(t),d(n))<=o}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).isAlmostEqualValue=n();
//# sourceMappingURL=index.js.map
